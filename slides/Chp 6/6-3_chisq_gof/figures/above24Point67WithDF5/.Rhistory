#
x <- seq(-pi, pi, len = 20)#
y <- seq(-pi, pi, len = 20)#
g <- expand.grid(x = x, y = y)#
g$z <- sin(sqrt(g$x^2 + g$y^2))#
wireframe(z ~ x * y, g, drape = TRUE,#
aspect = c(3,1), colorkey = TRUE
term1*exp(term2*(term3+term4-term5))#
} # setting up the function of the multivariate normal density#
##
z<-outer(x1,x2,f) # calculating the density values#
##
persp(x1, x2, z,#
main="Two dimensional Normal Distribution",#
sub=expression(italic(f)~(bold(x))==frac(1,2~pi~sqrt(sigma[11]~#
sigma[22]~(1-rho^2)))~phantom(0)^bold(.)~exp~bgroup("{",#
list(-frac(1,2(1-rho^2)),#
bgroup("[", frac((x[1]~-~mu[1])^2, sigma[11])~-~2~rho~frac(x[1]~-~mu[1],#
sqrt(sigma[11]))~ frac(x[2]~-~mu[2],sqrt(sigma[22]))~+~#
frac((x[2]~-~mu[2])^2, sigma[22]),"]")),"}")),#
col="lightgreen",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
ticktype="detailed",#
nticks=5) # produces the 3-D plot#
##
mtext(expression(list(mu[1]==0,mu[2]==0,sigma[11]==10,sigma[22]==10,sigma[12#
]==15,rho==0.5)), side=3) # adding a text line to the graph
persp(x1, x2, z,#
col="lightgreen",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
ticktype="detailed",#
nticks=5)
?R
?persp
persp(x1, x2, z,#
col="lightgreen",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
ticktype="detailed",#
nticks=5,box = FALSE )
length(x1)
persp(x1, x2, z,#
col=1:10,#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
nticks=5)
persp(x1, x2, z,#
col=1:10,#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE)
persp(x1, x2, z,#
border=1:10,#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE)
persp(x1, x2, z,#
border="red",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE)
persp(x1, x2, z,#
border="red",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, color = "white")
##
persp(x1, x2, z,#
border="red",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white")
par(bg = "white")#
x <- seq(-1.95, 1.95, length = 30)#
y <- seq(-1.95, 1.95, length = 35)#
z <- outer(x, y, function(a,b) a*b^2)#
nrz <- nrow(z)#
ncz <- ncol(z)#
# Create a function interpolating colors in the range of specified colors#
jet.colors <- colorRampPalette( c("blue", "green") ) #
# Generate the desired number of colors from this palette#
nbcol <- 100#
color <- jet.colors(nbcol)#
# Compute the z-value at the facet centres#
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]#
# Recode facet z-values into color indices#
facetcol <- cut(zfacet, nbcol)#
persp(x, y, z, col=color[facetcol], phi=30, theta=-30)
x <- seq(-10, 10, length= 30)#
y <- x#
f <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }#
z <- outer(x, y, f)#
z[is.na(z)] <- 1#
op <- par(bg = "white")#
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")#
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",#
      ltheta = 120, shade = 0.75, ticktype = "detailed",#
      xlab = "X", ylab = "Y", zlab = "Sinc( r )"#
) -> res#
round(res, 3)
?jet.colors
? colorRampPalette
YlOrBr <- c("#FFFFD4", "#FED98E", "#FE9929", "#D95F0E", "#993404")#
filled.contour(volcano,#
               color.palette = colorRampPalette(YlOrBr, space = "Lab"),#
               asp = 1)
filled.contour(volcano,#
               color.palette = colorRampPalette(YlOrBr, space = "Lab",#
                                                bias = 0.5),#
               asp = 1)
m <- outer(1:20,1:20,function(x,y) sin(sqrt(x*y)/3))#
rgb.palette <- colorRampPalette(c("red", "orange", "blue"),#
                                space = "rgb")
m <- outer(1:20,1:20,function(x,y) sin(sqrt(x*y)/3))#
rgb.palette <- colorRampPalette(c("red", "orange", "blue"),#
                                space = "rgb")#
Lab.palette <- colorRampPalette(c("red", "orange", "blue"),#
                                space = "Lab")
m <- outer(1:20,1:20,function(x,y) sin(sqrt(x*y)/3))#
rgb.palette <- colorRampPalette(c("red", "orange", "blue"),#
                                space = "rgb")#
Lab.palette <- colorRampPalette(c("red", "orange", "blue"),#
                                space = "Lab")#
filled.contour(m, col = rgb.palette(20))#
filled.contour(m, col = Lab.palette(20))
jet.colors <-#
  colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",#
                     "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))#
filled.contour(volcano, color = jet.colors, asp = 1)
jet.colors <- colorRampPalette( c("blue", "green") )
jet.colors <- colorRampPalette( c("blue", "green") ) #
color <- jet.colors(41)#
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]#
facetcol <- cut(zfacet, nbcol)#
#
persp(x1, x2, z,#
border= color[facetcol],#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white") # produces the 3-D plot
# 3-D plots#
##
##
mu1<-0 # setting the expected value of x1#
mu2<-0 # setting the expected value of x2#
s11<-10 # setting the variance of x1#
s12<-15 # setting the covariance between x1 and x2#
s22<-10 # setting the variance of x2#
rho<-0.5 # setting the correlation coefficient between x1 and x2#
x1<-seq(-10,10,length=41) # generating the vector series x1#
x2<-x1 # copying x1 to x2#
##
f<-function(x1,x2)#
{#
term1<-1/(2*pi*sqrt(s11*s22*(1-rho^2)))#
term2<--1/(2*(1-rho^2))#
term3<-(x1-mu1)^2/s11#
term4<-(x2-mu2)^2/s22#
term5<--2*rho*((x1-mu1)*(x2-mu2))/(sqrt(s11)*sqrt(s22))#
term1*exp(term2*(term3+term4-term5))#
} # setting up the function of the multivariate normal density#
##
z<-outer(x1,x2,f) # calculating the density values#
##
jet.colors <- colorRampPalette( c("blue", "green") ) #
color <- jet.colors(41)#
zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]#
facetcol <- cut(zfacet, nbcol)#
#
persp(x1, x2, z,#
border= color[facetcol],#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white") # produces the 3-D plot
z
max(z)
min(z)
surf.colors <- function(x, col = terrain.colors(20)) {#
#
  # First we drop the 'borders' and average the facet corners#
  # we need (nx - 1)(ny - 1) facet colours!#
  x.avg <- (x[-1, -1] + x[-1, -(ncol(x) - 1)] +#
             x[-(nrow(x) -1), -1] + x[-(nrow(x) -1), -(ncol(x) - 1)]) / 4#
#
  # Now we construct the actual colours matrix#
  colors = col[cut(x.avg, breaks = length(col), include.lowest = T)]#
#
  return(colors)#
}
library(MASS)#
x <- cbind(rnorm(100), rnorm(100))#
x <- kde2d(x[,1], x[,2], n = 100)$z#
#
# now lets plot it!#
par(bg = "gray")#
#
persp(x, col = surf.colors(x), phi = 30, theta = 225, box = F, border = NA,#
shade = .4)
persp(x, col = surf.colors(x, col = heat.colors(40)), phi = 30, theta =#
225, box = F, border = NA, shade = .4)
#
persp(x, col = surf.colors(x, col = topo.colors(40)), phi = 30, theta =#
225, box = F, border = NA, shade = .4)
persp(x, col = surf.colors(x, col = gray(seq(0, 1, len = 40))), phi = 30,#
theta = 225, box = F, border = NA, shade = .4)
#
persp(x, col = surf.colors(x, col = topo.colors(40)), phi = 30, theta =#
225, box = F, border = NA, shade = .4)
#
persp(x1, x2, z,#
border= color[facetcol],#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white")
#
persp(x1, x2, z,#
border= "white",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white")
data( volcano)#
M<- nrow( volcano)#
N<- ncol( volcano)#
x<- seq( 0,1,,M)#
y<- seq( 0,1,,N)#
#
drape.plot( x,y,volcano, col=terrain.colors(128))-> pm \
#
persp(x1, x2, z,#
border= c(1:41),#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white")
persp(x1, x2, z,#
border= c(1,2,3),#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white")
rm(list=ls())
x1<-seq(-10,10,length=41)
x2<-x1
z<-outer(x1,x2,f) # calculating the density values
# 3-D plots#
##
##
mu1<-0 # setting the expected value of x1#
mu2<-0 # setting the expected value of x2#
s11<-10 # setting the variance of x1#
s12<-15 # setting the covariance between x1 and x2#
s22<-10 # setting the variance of x2#
rho<-0.5 # setting the correlation coefficient between x1 and x2#
x1<-seq(-10,10,length=41) # generating the vector series x1#
x2<-x1 # copying x1 to x2#
##
f<-function(x1,x2)#
{#
term1<-1/(2*pi*sqrt(s11*s22*(1-rho^2)))#
term2<--1/(2*(1-rho^2))#
term3<-(x1-mu1)^2/s11#
term4<-(x2-mu2)^2/s22#
term5<--2*rho*((x1-mu1)*(x2-mu2))/(sqrt(s11)*sqrt(s22))#
term1*exp(term2*(term3+term4-term5))#
} # setting up the function of the multivariate normal density#
##
z<-outer(x1,x2,f) # calculating the density values#
##
#
persp(x1, x2, z,#
border= c(1,2,3),#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = "white")
?persp
 persp
persp(x1, x2, z,#
border= "white",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = NA)
persp(x1, x2, z,#
border= 1,#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = NA)
##
#
persp(x1, x2, z,#
border= c(1,"red"),#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = NA) # produces the 3-D plot
persp(x1, x2, z,#
border= "red",#
theta=30, phi=20,#
r=50,#
d=0.1,#
expand=0.5,#
ltheta=90, lphi=180,#
shade=0.75,#
box = FALSE, col = NA) # produces the 3-D plot
q()
runif(1, 0, 20)
round(runif(1, 0, 20),0)
?runif
midtermEval = read.csv("/Users/mine/Desktop/midtermEval.csv", h = T)
head(midtermEval)
names(midtermEval)
barplot(table(midtermEval$Pace))
barplot(table(midtermEval$Pace), main = "Pace")
hist(midtermEval$HW.hours, main = "HW hours weekly")
hist(as.numeric(midtermEval$HW.hours), main = "HW hours weekly")
boxplot(as.numeric(midtermEval$HW.hours), main = "HW hours weekly")
boxplot(as.numeric(midtermEval$Textbook.hours), main = "HW hours weekly")
boxplot(as.numeric(midtermEval$Textbook.hours), main = "Textbook hours weekly")
barplot(table(midtermEval$Taken.AP), main = "Pace")
barplot(table(midtermEval$Taken.AP), main = "Taken AP")
barplot(table(midtermEval$Taken.AP)/length(midtermEval), main = "Taken AP")
barplot(table(midtermEval$Taken.AP)/nrow(midtermEval), main = "Taken AP")
barplot(table(midtermEval$Pace)/nrow(midtermEval), main = "Pace")
barplot(table(midtermEval$Rand.Theory.Like)/nrow(midtermEval), main = "Pace")
barplot(table(midtermEval$Rand.Theory.Understand)/nrow(midtermEval), main = "Pace")
barplot(table(midtermEval$Rand.Theory.Understand)/nrow(midtermEval), main = "Rand/Theory Understand")
?barplot
library(openintro)
?barPlot
??barPlot
barplot(table(midtermEval$Can.do.lab.alone)/nrow(midtermEval), main = "Rand/Theory Understand")
barplot(table(midtermEval$Do.you.think.Stats.is.Important.)/nrow(midtermEval), main = "Rand/Theory Understand")
barplot(table(midtermEval$Do.you.think.Stats.is.Important.)/nrow(midtermEval), main = "Stats is important?")
q()
midtermEval = read.csv("/Users/mine/Desktop/midtermEval.csv", h = T)
names(midtermEval)
barplot(table(midtermEval$Can.do.lab.alone)/nrow(midtermEval), main = "Can do lab alone?")
barplot(table(midtermEval$Can.do.lab.alone,midtermEval$Pace)/nrow(midtermEval), main = "Can do lab alone?")
barplot(table(midtermEval$Can.do.lab.alone,midtermEval$Pace)/nrow(midtermEval), main = "Can do lab alone?", legend = TRUE)
barplot(table(midtermEval$Can.do.lab.alone,midtermEval$Pace)/nrow(midtermEval), main = "Can do lab alone?", legend = TRUE, beside = TRUE)
barplot(table(x,y), beside=TRUE)
barplot(table(midtermEval$Can.do.lab.alone,midtermEval$Pace)/nrow(midtermEval), main = "Can do lab alone?", beside = TRUE)
q()
9.55+.25
0.42 - 1.65 * sqrt(0.42 * 0.58 / 783)
0.42 + 1.65 * sqrt(0.42 * 0.58 / 783)
sqrt(0.42 * 0.58 / 783)
 1.65 * 0.0176
50 * 0.08
q()
1.96^2*.017*(1-0.017)/0.02^2
q()
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	x <- seq(0, df+2*df*3, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(6,10)
chiTail(5,10)
chiTail(9,10)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	x <- seq(0, df+4*df, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(9,10)
chiTail(5,10)
chiTail(5,12)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- df+4*df#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(at=c(0,U,xmax), label = c(NA,U,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(5,12)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- df+4*df#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax), label = c(NA,U,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(5,12)
chiTail(5,12)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- df+4*df#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(5,12)
chiTail(5,12)
chiTail(5,3)
chiTail(5,5)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- df+4*df#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,df,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(5,5)
chiTail(5,5)
chiTail(5,3)
chiTail(5,9)
chiTail(1,9)
#
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,df,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(1,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+3)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,df,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(1,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,df,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(1,9)
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = pchisq(0.8*xmax,df), paste(c("df =",df)))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
?pchisq
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = qchisq(0.8*xmax,df), paste(c("df =",df)))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
?pchisq
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = dchisq(0.8*xmax,df), paste(c("df =",df)))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = 2*dchisq(0.8*xmax,df), paste(c("df =",df)))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = 5*dchisq(0.8*xmax,df), paste(c("df =",df)))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = 5*dchisq(0.8*xmax,df), paste("df =",df))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = 20*dchisq(0.8*xmax,df), paste("df =",df))#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,df,xmax+3), label = c(0,U,NA,NA))#
	text(x = 0.8*xmax, y = 20*dchisq(0.8*xmax,df), paste("df =",df), cex = 1.5)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
#
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))#
	text(x = 0.8*xmax, y = 20*dchisq(0.8*xmax,df), paste("df =",df), cex = 1.5)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(4,9)
pdf('chiSquareAreaAbove10WithDF6.pdf', 5, 3)#
#
chiTail(df = 6, U = 10)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/chiSquareAreaAbove10WithDF6")
pdf('chiSquareAreaAbove10WithDF6.pdf', 5, 3)#
#
chiTail(df = 6, U = 10)#
#
dev.off()
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))#
	text(x = 0.8*xmax, y = 30*dchisq(0.8*xmax,df), paste("df =",df), cex = 1)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
pdf('chiSquareAreaAbove10WithDF6.pdf', 5, 3)#
#
chiTail(df = 6, U = 10)#
#
dev.off()
.4/.6
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/chiSquareAreaAbove10WithDF6")#
#
pdf('chiSquareAreaAbove10WithDF6.pdf', 5, 3)#
#
chiTail(df = 6, U = 10)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/chiSquareAreaAbove17WithDF9")#
#
pdf('chiSquareAreaAbove17WithDF9.pdf', 5, 3)#
#
chiTail(df = 9, U = 17)#
#
dev.off()
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	xmax <- max(df+4*df,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))#
	text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/chiSquareAreaAbove17WithDF9")#
#
pdf('chiSquareAreaAbove17WithDF9.pdf', 5, 3)#
#
chiTail(df = 9, U = 17)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above10WithDF6")#
#
pdf('above10WithDF6.pdf', 5, 3)#
#
chiTail(df = 6, U = 10)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above17WithDF9")#
#
pdf('above17WithDF9.pdf', 5, 3)#
#
chiTail(df = 9, U = 17)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above30WithDF10")#
#
pdf('above30WithDF10.pdf', 5, 3)#
#
chiTail(df = 10, U = 30)#
#
dev.off()
pchisq(q = 17, df = 6)
pchisq(q = 17, df = 6, lower.tail = FALSE)
pchisq(q = 30, df = 10, lower.tail = FALSE)
27.889-10
17.889/sqrt(20)
chiTail <- function(df, U){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))#
	text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above30WithDF10")#
#
pdf('above30WithDF10.pdf', 5, 3)#
#
chiTail(df = 10, U = 30)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above10WithDF6")#
#
pdf('above10WithDF6.pdf', 5, 3)#
#
chiTail(df = 6, U = 10)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above17WithDF9")#
#
pdf('above17WithDF9.pdf', 5, 3)#
#
chiTail(df = 9, U = 17)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above30WithDF10")#
#
pdf('above30WithDF10.pdf', 5, 3)#
#
chiTail(df = 10, U = 30)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above24Point73WithDF5")#
#
pdf('above24Point73WithDF5.pdf', 5, 3)#
#
chiTail(df = 5, U = 24.73)#
#
dev.off()
a = c(1,2,3,4)
sample(a, size = 2, replace = FALSE)
sample(a, size = 2, replace = FALSE)
chiTail(df = 6, U = 10)
chiTail <- function(df, U, showdf = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
	axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
#
	if(axes == TRUE){#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	else{#
		axis(1, at = NA, label = NA)#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
#
	if(axes == TRUE){#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	else{#
		axis(1)#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
#
	if(axes == TRUE){#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	else{#
		abline(h = 0)#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
#
	if(axes == TRUE){#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	else{#
		lines(c(0,0), c(0,xmax))#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
#
	if(axes == TRUE){#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	else{#
		lines(c(0,0), c(xmax,0))#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
	abline(h=0)#
#
	if(axes == TRUE){#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	if(axes == FALSE){#
		lines(c(0,0), c(xmax,0))#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail(df = 6, U = 10, showdf = FALSE)
?lines
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail <- function(df, U, showdf = TRUE, showaxes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
#
	if(axes == TRUE){#
		abline(h=0)#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	if(axes == FALSE){#
		lines(c(0,0), c(xmax,0))#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, showaxes = FALSE)
chiTail <- function(df, U, showdf = TRUE, showaxes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
#
	if(showaxes == TRUE){#
		abline(h=0)#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	if(showaxes == FALSE){#
		lines(c(0,0), c(xmax,0))#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, showaxes = FALSE)
chiTail <- function(df, U, showdf = TRUE, axes = TRUE){#
	par(mar=c(2, 1, 1, 1), mgp=c(2.1, 0.8, 0), las=1)#
	#
	sd <- sqrt(2*df)#
	xmax <- max(df + 4.000102*sd,U+2)#
	x <- seq(0, xmax, 0.05)#
	y <- dchisq(x, df)#
	plot(x, y, type='l', axes=FALSE)#
#
	if(axes == TRUE){#
		abline(h=0)#
		axis(1, at=c(0,U,xmax+3), label = c(0,U,NA))		#
	}#
	if(axes == FALSE){#
		lines(c(0,xmax), c(0,0))#
	}#
	#
	if(showdf == TRUE){#
		text(x = 0.8*xmax, y = 0.5*max(y), paste("df =",df), cex = 1)	#
	}	#
	#
	these <- which(x > U)#
	X <- x[c(these[1], these, rev(these)[1])]#
	Y <- c(0, y[these], 0)#
	polygon(X, Y, col='#2277AA33', border='#00000044')#
}
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
chiTail(df = 6, U = 10, showdf = FALSE)
chiTail(df = 6, U = 10)
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)
text(x = 11, y = 0.3, "p-value", col = "red")
text(x = 11, y = 0.1, "p-value", col = "red")
text(x = 11, y = 0.001, "p-value", col = "red")
text(x = 11, y = 0.005, "p-value", col = "red")
text(x = 11, y = 0.005, "p-value", col = "red", cex = 1.5)
text(x = 14, y = 0.005, "p-value", col = "red", cex = 1.5)
text(x = 12, y = 0.005, "p-value", col = "red", cex = 1.5)
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/genericChiSquare")#
#
pdf('genericChiSquare.pdf', 5, 3)#
#
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)#
text(x = 12, y = 0.005, "p-value", col = "red", cex = 1.5)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/genericChiSquare")#
#
pdf('genericChiSquare.pdf', 5, 3)#
#
chiTail(df = 6, U = 10, showdf = FALSE, axes = FALSE)#
text(x = 12, y = 0.005, "p-value", col = "red", cex = 1)#
#
dev.off()
504*.6329
504*.3410
504*.0261
319+172+13
(338-319)/sqrt(319)
(136-172)/sqrt(172)
(30-13)/sqrt(13)
1.06^2 + (-2.74)^2 + 4.71^2
176*141/487
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-7independence/figures/popular")#
#
pdf('popular.pdf', 5, 3)#
#
chiTail(df = 4, U = 1.3121)#
#
dev.off()
chiTail(df = 4, U = 1.3121)
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-7independence/figures/popular")#
#
pdf('popular.pdf', 5, 4)#
#
chiTail(df = 4, U = 1.3121)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-7independence/figures/popular")#
#
pdf('popular.pdf', 6, 3)#
#
chiTail(df = 4, U = 1.3121)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above24Point73WithDF5")#
#
pdf('above24Point67WithDF5.pdf', 5, 3)#
#
chiTail(df = 5, U = 24.67)#
#
dev.off()
setwd("/Users/mine/Desktop/Teaching/Sta 101 - F11/Lectures/Lecture 15/5-6gof/figures/above24Point67WithDF5")#
#
pdf('above24Point67WithDF5.pdf', 5, 3)#
#
chiTail(df = 5, U = 24.67)#
#
dev.off()
64*.5
50*.64
50*(1-.64)
50/.64
50/(1-.64)
10/.64
10/(1-.64)
200*.15
26*7/50
24*7/50
40*.8
40*.2
(.55-.64)/sqrt(.64*(1-.64)/100)
200*.15
6+16+4
26*7/50
6+15+3
q()
